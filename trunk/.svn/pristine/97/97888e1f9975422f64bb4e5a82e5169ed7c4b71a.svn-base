package bks.gui.kundegui.gui;

import javax.swing.DefaultComboBoxModel;
import bks.fachlogik.kundesteuerung.grenz.KundeGrenz;
import bks.fachlogik.kundesteuerung.impl.IKundeSteuerungImpl;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Alexander
 */
public class ProfielBearbeitenFrame extends javax.swing.JFrame {

    private final IKundeSteuerungImpl kundesteuerung = new IKundeSteuerungImpl();
    private KundeGrenz kunde= kundesteuerung.getKundenProfil();

    /**
     * Creates new form ProfielBearbeitenFrame
     */
    public ProfielBearbeitenFrame() {
        super();
        initComponents();        
        initKundenprofiel(kunde);

    }

    private void saveInputs() {
        try {
            kunde.setTitel(String.valueOf(jcmbTitle.getSelectedItem()));
            kunde.setName(txtName.getText());
            kunde.setVorname(txtForename.getText());
            String family = String.valueOf(jcmbFamily.getSelectedItem());
            switch (family) {

                case "ledig":
                    kunde.setFamilienstand("l");
                    break;
                case "verheiratet":
                    kunde.setFamilienstand("v");
                    break;
                case "verwitwet":
                    kunde.setFamilienstand("w");
                    break;
                case "geschieden":
                    kunde.setFamilienstand("g");
                    break;
            }

            if (txtPlz.isVisible()) {
                kunde.setAdresse(txtStreet.getText() + "," + txtPlz.getText() + "," + txtPlace.getText());
            } else {
                kunde.setAdresse(txtStreet.getText());
            }
            kunde.setTelefon(txtPhone.getText());
            String month = String.valueOf(jcmbMonth.getSelectedItem());
            int monthInt = 0;
            switch (month) {
                case "Januar":
                    monthInt = 1;
                    break;
                case "Februar":
                    monthInt = 2;
                    break;
                case "März":
                    monthInt = 3;
                    break;
                case "April":
                    monthInt = 4;
                    break;
                case "Mai":
                    monthInt = 5;
                    break;
                case "Juni":
                    monthInt = 6;
                    break;
                case "Juli":
                    monthInt = 7;
                    break;
                case "August":
                    monthInt = 8;
                    break;
                case "September":
                    monthInt = 9;
                    break;
                case "Oktober":
                    monthInt = 10;
                    break;
                case "November":
                    monthInt = 11;
                    break;
                case "Dezember":
                    monthInt = 12;
                    break;
            }
            String birthday = String.valueOf(jcmbYear.getSelectedItem()) + "," + monthInt + "," + String.valueOf(jcmbDay.getSelectedItem());
            SimpleDateFormat format = new SimpleDateFormat("yyyy,MM,dd");
            Date date = format.parse(birthday);
            kunde.setGeburtsdatum(date);

            if (kundesteuerung.kundenProfilBearbeiten(kunde)) {
                JOptionPane.showMessageDialog(this, "Kunde erfolgreich gespeichert\n\n", "kritischer Fehler", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Es ist ein Fehler aufgetreten\n\n", "kritischer Fehler", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ParseException e) {
            System.out.println("fail");
        }

    }

    private void initKundenprofiel(KundeGrenz kunde) {
        if (kunde != null) {
            txtName.setText(kunde.getName());
            txtForename.setText(kunde.getVorname());
            txtKid.setText("" + kunde.getKid());
            txtPhone.setText(kunde.getTelefon());
            try {
                String[] adresse = kunde.getAdresse().split(",");
                txtPlace.setVisible(true);
                txtPlz.setVisible(true);
                jlabPlace.setVisible(true);
                jlabPlz.setVisible(true);
                txtStreet.setText(adresse[0]);
                txtPlace.setText(adresse[2]);
                txtPlz.setText(adresse[1]);
            } catch (Exception e) {
                jlabStreet.setText("Adresse");
                txtStreet.setText(kunde.getAdresse());
                txtPlace.setVisible(false);
                txtPlz.setVisible(false);
                jlabPlace.setVisible(false);
                jlabPlz.setVisible(false);
            }
            initJComboboxs(kunde);
        } else {
            JOptionPane.showMessageDialog(this, "Es ist ein Fehler aufgetreten\n\n", "Kein Kundenprofil vorhanden", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void initJComboboxs(KundeGrenz kunde) {

        String[] titleArray = new String[]{"Herr", "Frau", "Dr.", "Prof.", "Ing-", "BSc."};
        DefaultComboBoxModel titleModel = new DefaultComboBoxModel(titleArray);
        jcmbTitle.setModel(titleModel);
        for (int i = 0; i < titleArray.length; ++i) {
            if (titleArray[i].equals(kunde.getTitel())) {
                jcmbTitle.setSelectedIndex(i);
                break;
            } else {
                jcmbTitle.setSelectedIndex(-1);
            }
        }

        String[] familyArray = new String[]{"ledig", "verheiratet", "verwitwet", "geschieden"};
        DefaultComboBoxModel familyModel = new DefaultComboBoxModel(familyArray);
        jcmbFamily.setModel(familyModel);
        switch (kunde.getFamilienstand()) {
            case "l":
                jcmbFamily.setSelectedIndex(0);
                break;
            case "v":
                jcmbFamily.setSelectedIndex(1);
                break;
            case "w":
                jcmbFamily.setSelectedIndex(2);
                break;
            case "g":
                jcmbFamily.setSelectedIndex(3);
                break;
            default:
                jcmbFamily.setSelectedIndex(-1);
                break;
        }

        Date birthday = kunde.getGeburtsdatum();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String[] birth = formatter.format(birthday).split("-");

        String[] dayArray = new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"};
        DefaultComboBoxModel dayModel = new DefaultComboBoxModel(dayArray);
        jcmbDay.setModel(dayModel);
        for (int i = 0; i < dayArray.length; ++i) {
            if (dayArray[i].equals(birth[2])) {
                jcmbDay.setSelectedIndex(i);
                break;
            } else {
                jcmbDay.setSelectedIndex(-1);
            }
        }

        DefaultComboBoxModel monthModel = new DefaultComboBoxModel(new String[]{"Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"});
        jcmbMonth.setModel(monthModel);
        switch (birth[1]) {
            case "01":
                jcmbMonth.setSelectedIndex(0);
                break;
            case "02":
                jcmbMonth.setSelectedIndex(1);
                break;
            case "03":
                jcmbMonth.setSelectedIndex(2);
                break;
            case "04":
                jcmbMonth.setSelectedIndex(3);
                break;
            case "05":
                jcmbMonth.setSelectedIndex(4);
                break;
            case "06":
                jcmbMonth.setSelectedIndex(5);
                break;
            case "07":
                jcmbMonth.setSelectedIndex(6);
                break;
            case "08":
                jcmbMonth.setSelectedIndex(7);
                break;
            case "09":
                jcmbMonth.setSelectedIndex(8);
                break;
            case "10":
                jcmbMonth.setSelectedIndex(9);
                break;
            case "11":
                jcmbMonth.setSelectedIndex(10);
                break;
            case "12":
                jcmbMonth.setSelectedIndex(11);
                break;
            default:
                jcmbMonth.setSelectedIndex(-1);
                break;
        }

        String[] yearArray = new String[]{"1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017"};
        DefaultComboBoxModel yearModel = new DefaultComboBoxModel(yearArray);
        jcmbYear.setModel(yearModel);
        for (int i = 0; i < yearArray.length; ++i) {
            if (yearArray[i].equals(birth[0])) {
                jcmbYear.setSelectedIndex(i);
                break;
            } else {
                jcmbYear.setSelectedIndex(-1);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jpanPersonal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtForename = new javax.swing.JTextField();
        txtKid = new javax.swing.JTextField();
        jcmbTitle = new javax.swing.JComboBox<>();
        jcmbFamily = new javax.swing.JComboBox<>();
        jpanAddress = new javax.swing.JPanel();
        jlabStreet = new javax.swing.JLabel();
        jlabPlz = new javax.swing.JLabel();
        jlabPlace = new javax.swing.JLabel();
        txtStreet = new javax.swing.JTextField();
        txtPlz = new javax.swing.JTextField();
        txtPlace = new javax.swing.JTextField();
        jpanBirthday = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jcmbDay = new javax.swing.JComboBox<>();
        jcmbMonth = new javax.swing.JComboBox<>();
        jcmbYear = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Profil bearbeiten");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        btnSave.setText("Speichern");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnReset.setText("Zurücksetzen");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });

        btnCancel.setText("Abbrechen");
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });

        jpanPersonal.setBorder(javax.swing.BorderFactory.createTitledBorder("Persönliches"));

        jLabel1.setText("Titel:");

        jLabel2.setText("Name: ");

        jLabel3.setText("Vorname: ");

        jLabel8.setText("Kundenummer:");

        jLabel9.setText("Familienstand:");

        txtName.setEditable(false);

        txtForename.setEditable(false);

        txtKid.setEditable(false);

        jcmbTitle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcmbFamily.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jpanPersonalLayout = new javax.swing.GroupLayout(jpanPersonal);
        jpanPersonal.setLayout(jpanPersonalLayout);
        jpanPersonalLayout.setHorizontalGroup(
            jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanPersonalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addGap(27, 27, 27)
                .addGroup(jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtKid, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtForename, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcmbTitle, javax.swing.GroupLayout.Alignment.LEADING, 0, 150, Short.MAX_VALUE)
                    .addComponent(jcmbFamily, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpanPersonalLayout.setVerticalGroup(
            jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanPersonalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcmbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtForename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcmbFamily, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtKid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpanAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Anschrift"));

        jlabStreet.setText("Strasse:");

        jlabPlz.setText("PLZ:");

        jlabPlace.setText("Ort:");

        javax.swing.GroupLayout jpanAddressLayout = new javax.swing.GroupLayout(jpanAddress);
        jpanAddress.setLayout(jpanAddressLayout);
        jpanAddressLayout.setHorizontalGroup(
            jpanAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanAddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabStreet)
                    .addComponent(jlabPlz)
                    .addComponent(jlabPlace))
                .addGap(59, 59, 59)
                .addGroup(jpanAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtStreet, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(txtPlz)
                    .addComponent(txtPlace))
                .addContainerGap())
        );
        jpanAddressLayout.setVerticalGroup(
            jpanAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanAddressLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpanAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabStreet)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabPlz)
                    .addComponent(txtPlz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabPlace)
                    .addComponent(txtPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jpanBirthday.setBorder(javax.swing.BorderFactory.createTitledBorder("Geburtsdatum"));

        jLabel4.setText("Tag:");

        jLabel10.setText("Monat:");

        jLabel11.setText("Jahr:");

        jcmbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jpanBirthdayLayout = new javax.swing.GroupLayout(jpanBirthday);
        jpanBirthday.setLayout(jpanBirthdayLayout);
        jpanBirthdayLayout.setHorizontalGroup(
            jpanBirthdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanBirthdayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanBirthdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jcmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jpanBirthdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jcmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jpanBirthdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );
        jpanBirthdayLayout.setVerticalGroup(
            jpanBirthdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanBirthdayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanBirthdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanBirthdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kontakt"));

        jLabel5.setText("Telefon:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(61, 61, 61)
                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addComponent(jpanAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanPersonal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpanPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpanBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpanAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnReset)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        jpanPersonal.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked

        Object[] options = {"Ja", "Nein", "Abrechhen"};

        int n = JOptionPane.showOptionDialog(this,
                "Ohne Speicher fortfahren?",
                "Sind Sie sich sicher sicher?",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[1]);
        if (n == 0) {
            this.dispose();
        } else if (n == 1) {
            saveInputs();
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        Object[] options = {"Ja", "Nein"};

        int n = JOptionPane.showOptionDialog(this,
                "Möchten sie die Änderungen abspeichern?",
                "Speichern",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
        if (n == 0) {
            saveInputs();
        }

    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        initKundenprofiel(kundesteuerung.getKundenProfil());
    }//GEN-LAST:event_btnResetMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfielBearbeitenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfielBearbeitenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfielBearbeitenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfielBearbeitenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfielBearbeitenFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> jcmbDay;
    private javax.swing.JComboBox<String> jcmbFamily;
    private javax.swing.JComboBox<String> jcmbMonth;
    private javax.swing.JComboBox<String> jcmbTitle;
    private javax.swing.JComboBox<String> jcmbYear;
    private javax.swing.JLabel jlabPlace;
    private javax.swing.JLabel jlabPlz;
    private javax.swing.JLabel jlabStreet;
    private javax.swing.JPanel jpanAddress;
    private javax.swing.JPanel jpanBirthday;
    private javax.swing.JPanel jpanPersonal;
    private javax.swing.JTextField txtForename;
    private javax.swing.JTextField txtKid;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPlace;
    private javax.swing.JTextField txtPlz;
    private javax.swing.JTextField txtStreet;
    // End of variables declaration//GEN-END:variables
}
